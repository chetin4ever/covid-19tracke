{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailydata","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetcheddata","setState","this","src","coronaImage","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2556a64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\"\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\"\nimport styles from \"./Cards.module.css\"\nimport CountUp from \"react-countup\"\nimport cx from \"classnames\"\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  // const { confirmed, recovered, deaths, lastUpdate } = this.props\n  // console.log(confirmed.value + \"from\")\n  if (!confirmed) {\n    return \"loading...\"\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center'>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=','\n              />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>\n              number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=','\n              />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>\n              number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=','\n              />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>\n              number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\nexport default Cards\n","import axios from \"axios\"\nconst url = \"https://covid19.mathdro.id/api\"\nexport const fetchData = async (country) => {\n  let changeableUrl = url\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl)\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    }\n    // return modifiedData\n  } catch (error) {\n    console.log(error)\n  }\n}\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`)\n    const modifiedData = data.map((dailydata) => ({\n      confirmed: dailydata.confirmed.total,\n      deaths: dailydata.deaths.total,\n      date: dailydata.reportDate,\n    }))\n    // console.log(data)\n    return modifiedData\n  } catch (error) {\n    console.log(error)\n  }\n}\nexport const fetchCountries = async (country) => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`)\n    console.log(countries)\n    return countries.map((country) => country.name)\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport { fetchDailyData } from \"../../api\"\nimport { Line, Bar } from \"react-chartjs-2\"\nimport styles from \"./Charts.module.css\"\n\nconst Chart = ({ data, country }) => {\n  const [dailydata, setDailyData] = useState([])\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData())\n    }\n    fetchAPI()\n  }, [])\n  // line chart\n  const lineChart = dailydata[0] ? (\n    <Line\n      data={{\n        labels: dailydata.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailydata.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailydata.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null\n  //Bar chart for specific country\n  const barChart = data.confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recoverd\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255,  0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current state in ${country}`,\n        },\n      }}\n    />\n  ) : null\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  )\n}\nexport default Chart\n","import React, { useState, useEffect } from \"react\"\nimport { NativeSelect, FormControl } from \"@material-ui/core\"\nimport styles from \"./CountryPicker.module.css\"\nimport { fetchCountries } from \"../../api\"\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setfetchedCountries] = useState([])\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setfetchedCountries(await fetchCountries())\n    }\n    fetchAPI()\n  }, [setfetchedCountries])\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=''\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=''>Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  )\n}\nexport default CountryPicker\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from \"react\"\nimport { Cards, Chart, CountryPicker } from \"./components\"\nimport styles from \"./App.module.css\"\nimport { fetchData } from \"./api\"\nimport coronaImage from \"./images/image.png\"\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  }\n  async componentDidMount() {\n    const fetcheddata = await fetchData()\n    this.setState({ data: fetcheddata })\n    console.log(this.state, \"from mounted\")\n  }\n  handleCountryChange = async (country) => {\n    //fetch data\n    const fetcheddata = await fetchData(country)\n    console.log(fetcheddata, \"specific country\")\n    //setdata\n    this.setState({ data: fetcheddata, country: country })\n  }\n  render() {\n    const { data, country } = this.state\n    console.log(data, \"from app\")\n    return (\n      <div className={styles.container}>\n        <img src={coronaImage} className={styles.image} alt='coronaImage'></img>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\nexport default App\n","import { React } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2ncTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}